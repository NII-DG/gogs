// Code generated by MockGen. DO NOT EDIT.
// Source: ./internal/db/repo.go

// Package mock_db is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockAbstructDbRepository is a mock of AbstructDbRepository interface.
type MockAbstructDbRepository struct {
	ctrl     *gomock.Controller
	recorder *MockAbstructDbRepositoryMockRecorder
}

// MockAbstructDbRepositoryMockRecorder is the mock recorder for MockAbstructDbRepository.
type MockAbstructDbRepositoryMockRecorder struct {
	mock *MockAbstructDbRepository
}

// NewMockAbstructDbRepository creates a new mock instance.
func NewMockAbstructDbRepository(ctrl *gomock.Controller) *MockAbstructDbRepository {
	mock := &MockAbstructDbRepository{ctrl: ctrl}
	mock.recorder = &MockAbstructDbRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAbstructDbRepository) EXPECT() *MockAbstructDbRepositoryMockRecorder {
	return m.recorder
}

// FullName mocks base method.
func (m *MockAbstructDbRepository) FullName() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FullName")
	ret0, _ := ret[0].(string)
	return ret0
}

// FullName indicates an expected call of FullName.
func (mr *MockAbstructDbRepositoryMockRecorder) FullName() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FullName", reflect.TypeOf((*MockAbstructDbRepository)(nil).FullName))
}
